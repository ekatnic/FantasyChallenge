"""
Django settings for fantasy_football_project project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import django_heroku
import os
import dj_database_url
import mimetypes
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# TODO: i think we want to implement this 'django-allauth' package and use the Cognito provider
# TODO: Quickstart docs
# https://django-allauth.readthedocs.io/en/latest/installation/quickstart.html

# TODO: Cognito specific docs:
# https://django-allauth.readthedocs.io/en/latest/socialaccount/providers/amazon_cognito.html

# SECURITY WARNING: keep the secret key used in production secret!
load_dotenv()
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
TANK_API_KEY = os.environ.get("TANK_API_KEY")
TANK_API_ENDPOINT = "tank01-nfl-live-in-game-real-time-statistics-nfl.p.rapidapi.com"

# DEBUG = False
DEBUG = True

ALLOWED_HOSTS = []
ACCOUNT_LOGIN_BY_CODE_ENABLED = True
# Application definition

# https://django-allauth.readthedocs.io/en/latest/installation/quickstart.html
# https://dj-rest-auth.readthedocs.io/en/latest/installation.html
INSTALLED_APPS = [
    'computedfields',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'fantasy_football_app',
    'django_extensions',
    "whitenoise.runserver_nostatic",
    'django.contrib.staticfiles',
    'widget_tweaks',
    'waffle',
    'corsheaders',
    'rest_framework',
    'bootstrap5',
    "rest_framework.authtoken",
    "dj_rest_auth",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    # "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.amazon_cognito",
    "dj_rest_auth.registration",
    # "polls",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    "allauth.account.middleware.AccountMiddleware", #Allauth middleware 
]

ROOT_URLCONF = 'fantasy_football_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build'), BASE_DIR / 'fantasy_football_app' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fantasy_football_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

IS_HEROKU_APP = "DYNO" in os.environ and not "CI" in os.environ
LOGIN_URL = '/sign_in/'

if IS_HEROKU_APP:
    # In production on Heroku the database configuration is derived from the `DATABASE_URL`
    # environment variable by the dj-database-url package. `DATABASE_URL` will be set
    # automatically by Heroku when a database addon is attached to your Heroku app. See:
    # https://devcenter.heroku.com/articles/provisioning-heroku-postgres
    # https://github.com/jazzband/dj-database-url
    DATABASES = {
        "default": dj_database_url.config(),
    }
    DATABASES['default']['ENGINE'] = 'django.db.backends.postgresql_psycopg2'
    CORS_ALLOWED_ORIGINS = [
        'https://fantasy-challenge-2024-59233a8817fc.herokuapp.com',
        'http://playoff-showdown.com',
        'https://playoff-showdown.com',
    ]
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
else:
    # PROJECT_DIR = os.path.abspath(os.path.dirname(__file__))
    # When running locally in development or in CI, a sqlite database file will be used instead
    # to simplify initial setup. Longer term it's recommended to use Postgres locally too.
    DEBUG = True
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': os.path.join(PROJECT_DIR, 'yourdatabasename.db'),
    #     }
    # }
    # # When running locally in development or in CI, a sqlite database file will be used instead
    # # to simplify initial setup. Longer term it's recommended to use Postgres locally too.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'fantasy_challenge_db',
            'USER': 'postgres',
            'PASSWORD': 'pass',
            'HOST': 'localhost',
            'PORT': '5432'
        }
    }
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:8000",
        "http://127.0.0.1:8000",

    ]


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    # 'django.contrib.auth.backends.ModelBackend',

    'fantasy_football_app.views.CaseInsensitiveModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',

    ]

# TODO: Put cognito url prefix and AWS region as Environemnt variables
# https://django-allauth.readthedocs.io/en/latest/socialaccount/providers/amazon_cognito.html
# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'amazon_cognito': {
        'DOMAIN': 'https://playoff-showdown.auth.us-east-1.amazoncognito.com',
    }
}

REST_FRAMEWORK = {

	"DEFAULT_AUTHENTICATION_CLASSES": (
		# "rest_framework.authentication.SessionAuthentication",
		"rest_framework.authentication.TokenAuthentication",
		"dj_rest_auth.jwt_auth.JWTCookieAuthentication",
		),
	"DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
	}

  
SIMPLE_JWT = {
	"ACCESS_TOKEN_LIFETIME": timedelta(minutes=15),
	"REFRESH_TOKEN_LIFETIME": timedelta(minutes=20),
}

REST_AUTH = {
	"USE_JWT": True,
	"JWT_AUTH_COOKIE": "playoff-showdown-auth",
	"JWT_AUTH_REFRESH_COOKIE": "playoff-showdown-refresh-token",
	}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'build/static'), 
    os.path.join(BASE_DIR, 'fantasy_football_app/static'), 
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
django_heroku.settings(locals())

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'fantasy_football_cache',
    }
}
DATABASES['default']['CONN_MAX_AGE'] = 0

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",
    'https://fantasy-challenge-2024-59233a8817fc.herokuapp.com',
    'http://playoff-showdown.com',
    'https://playoff-showdown.com',
]
CORS_ORIGIN_ALLOW_ALL =  True

COMPUTEDFIELDS_ADMIN = True
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}
